events {
  worker_connections 1024;  # Максимальное количество соединений на одного рабочего процесса
}

http {
  server {
    listen 80;
    server_name localhost;

    location / {
      root /usr/share/nginx/html;
      #try_files $uri /index.html;
      try_files $uri $uri/ /index.html;
    }

    location /api {
      proxy_pass http://backend:8081;
      
      # Прокси-сервер Nginx передает заголовки
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}

# user nginx;  # Это указывает на пользователя, от имени которого будет работать Nginx
# worker_processes auto;

# error_log  /var/log/nginx/error.log notice;
# pid        /var/run/nginx.pid;

# events {
#     worker_connections  1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';

#     access_log  /var/log/nginx/access.log  main;

#     sendfile        on;
#     keepalive_timeout  65;

#     include /etc/nginx/conf.d/*.conf;  # Включение дополнительных конфигов

#     server {
#         listen 80;
#         server_name localhost;

#         location / {
#             root /usr/share/nginx/html;
#             try_files $uri $uri/ /index.html;
#         }

#         location /api {
#             proxy_pass http://backend:8081;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }
